{
    "title": "@064 #repeti\u00e7\u00e3o L3 - Conta D\u00edgitos",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@064 #repeti\u00e7\u00e3o L3 - Conta D\u00edgitos</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmpu9w0q0km.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"repeti\u00e7\u00e3o-l3---conta-d\u00edgitos\"><span class=\"citation\" data-cites=\"064\">@064</span> #repeti\u00e7\u00e3o L3 - Conta D\u00edgitos</h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/moodle/master/base/064/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Jo\u00e3ozinho passou o dia visualizando os seus contatos no celular.<br />\nLogo ele decidiu fazer um programa que calcula a quantidade de vezes que um determinado d\u00edgito aparece em um n\u00famero de contato.<br />\nAp\u00f3s passar uma semana tentando ele repassou esse problema para voc\u00ea.</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Receba dois inteiros do usu\u00e1rio, o primeiro sendo o d\u00edgito que se quer saber quantas vezes aparece e o segundo sendo o n\u00famero do contato.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Valor inteiro A (entre 1 e 9).</li>\n<li>Valor inteiro B.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>N\u00famero de vezes que o d\u00edgito A aparece em B</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n0\n0\n========\n1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n1\n10\n========\n1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n2\n99102030\n========\n1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n9\n44902391\n========\n2\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n5939\n========\n0\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n0\n51007140\n========\n3\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h2 id=\"ajuda\">Ajuda</h2>\n<p>Seu objetivo \u00e9 utilizar opera\u00e7\u00f5es de divis\u00e3o e m\u00f3dulo para extrair a unidade at\u00e9 que o n\u00famero acabe.</p>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>unidade <span class=\"op\">=</span> numero <span class=\"op\">%</span> <span class=\"dv\">10</span>  <span class=\"co\"># operador de m\u00f3dulo</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>numero <span class=\"op\">=</span> numero <span class=\"op\">//</span> <span class=\"dv\">10</span>  <span class=\"co\"># opera\u00e7\u00e3o de divis\u00e3o inteira</span></span></code></pre></div>\n<p>Fa\u00e7a isso enquanto o n\u00famero for maior e zero e compare o resultado da extra\u00e7\u00e3o da unidade com o n\u00famero procurado.</p>\n<p>Por exemplo, seja o n\u00famero 239.</p>\n<ul>\n<li>1a intera\u00e7\u00e3o: unidade = 9, n\u00famero = 23</li>\n<li>2a intera\u00e7\u00e3o: unidade = 3, n\u00famero = 2</li>\n<li>3a intera\u00e7\u00e3o: unidade = 2, n\u00famero = 0</li>\n<li>Acaba o la\u00e7o</li>\n</ul>\n<p>Observe que o la\u00e7o deve ser executado pelo menos uma vez. Se o seu n\u00famero for 0 e estiver contando quantos zeros o n\u00famero possui, voc\u00ea vai precisar entrar no la\u00e7o pelo menos uma vez. Ent\u00e3o voc\u00ea pode fazer isso com um loop infinito e um controle ao final do la\u00e7o, ou um do while, caso sua linguagem suporte.</p>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># python</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">while</span> <span class=\"va\">True</span>:</span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">#fa\u00e7a o que tem que ser feito</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"cf\">if</span> num <span class=\"op\">==</span> <span class=\"dv\">0</span>:</span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">break</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//c</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">do</span> <span class=\"op\">{</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"co\">//fa\u00e7a o que tem que ser feito</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span> <span class=\"cf\">while</span><span class=\"op\">(</span>num <span class=\"op\">!=</span> <span class=\"dv\">0</span><span class=\"op\">);</span></span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "case=\ninput=0\n0\noutput=\"1\n\"\ngrade reduction=100%\n\ncase=\ninput=1\n10\noutput=\"1\n\"\ngrade reduction=100%\n\ncase=\ninput=2\n99102030\noutput=\"1\n\"\ngrade reduction=100%\n\ncase=\ninput=9\n44902391\noutput=\"2\n\"\ngrade reduction=100%\n\ncase=\ninput=4\n5939\noutput=\"0\n\"\ngrade reduction=100%\n\ncase=\ninput=0\n51007140\noutput=\"3\n\"\ngrade reduction=100%\n\ncase=05 t2\ninput=1\n99123321\noutput=\"2\n\"\ngrade reduction=100%\n\ncase=06 t3\ninput=9\n95398900\noutput=\"3\n\"\ngrade reduction=100%\n\ncase=07 t4\ninput=1\n99176810\noutput=\"2\n\"\ngrade reduction=100%\n\ncase=08 t5\ninput=3\n432\noutput=\"1\n\"\ngrade reduction=100%\n\ncase=09 t6\ninput=4\n44449999\noutput=\"4\n\"\ngrade reduction=100%\n\ncase=10 t7\ninput=0\n100101010\noutput=\"5\n\"\ngrade reduction=100%\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": []
}
