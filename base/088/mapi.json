{
    "title": "@088 #vetores L3 - Se fosse a mediana eu tinha passado!",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@088 #vetores L3 - Se fosse a mediana eu tinha passado\\!</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmpqv1nu765.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"vetores-l3---se-fosse-a-mediana-eu-tinha-passado\"><span class=\"citation\" data-cites=\"088\">@088</span> #vetores L3 - Se fosse a mediana eu tinha passado!</h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/moodle/master/base/088/__capa.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>O filho tirou 5 notas durante o semestre: 6, 6, 7, 7.1, 7.2<br />\n- Meu filho, sua m\u00e9dia em portugu\u00eas foi 6.7. Voc\u00ea t\u00e1 de recupera\u00e7\u00e3o.<br />\n- Mas, mam\u00e3e, a culpa \u00e9 do col\u00e9gio.<br />\n- Como assim, do col\u00e9gio?<br />\n- Se eles usassem a mediana ao inv\u00e9s da m\u00e9dia eu tinha passado direto!</p>\n<p>[DS]</p>\n<h4 id=\"obs-n\u00e3o-use-o-m\u00e9todo-pronto-de-ordenar-do-python.\">Obs: N\u00c3O use o m\u00e9todo pronto de ordenar do PYTHON.</h4>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>O c\u00e1lculo da mediana consiste em descobrir qual o valor intermedi\u00e1rio do vetor ORDENADO. No vetor v = {1, 2, 3}, por exemplo, a mediana \u00e9 2, pois este \u00e9 o elemento de valor intermedi\u00e1rio. Se a quantidade de elementos for par ent\u00e3o a m\u00e9diana \u00e9 a media entre os dois elementos centrais.</p>\n<p>Assim, voc\u00ea deve ordenar o vetor antes de calcular a mediana.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>1\u00b0 linha: A quantidade de elementos do vetor.<br />\n</li>\n<li>2a linha: Os elementos em ponto flutuante de forma n\u00e3o ordenada.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>O Valor da mediana com at\u00e9 uma casa decimal.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n2\n2 4\n========\n3.0\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n3\n0 1 2\n========\n1.0\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n0 9 3.2 1\n========\n6.1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n5\n0 2 9 8 5.1\n========\n9.0\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h2 id=\"ajuda\">Ajuda</h2>\n<h3 id=\"dica\">Dica</h3>\n<ul>\n<li><p>Implemente uma fun\u00e7\u00e3o que ordene o vetor;</p></li>\n<li><p>Voc\u00ea deve ordenar o vetor antes de calcular a mediana;</p></li>\n<li><p>Ser\u00e1 necess\u00e1rio utilizar o operador <code>%</code> (l\u00ea-se mod), que retorna o resto da divis\u00e3o de um n\u00famero por outro. Ele \u00e9 \u00fatil para saber se um n\u00famero \u00e9 <code>par</code> ou <code>impar</code>.</p></li>\n<li><p>Se um n\u00famero % 2 retorna 0, significa que ele \u00e9 par. Por exemplo:</p></li>\n</ul>\n<pre><code>    4 \u00e9 par pois, 4 % 2 retorna 0\n\n    5 n\u00e3o \u00e9 par pois, 5 % 2 retorna 3</code></pre>\n<ul>\n<li>Se um n\u00famero % 2 n\u00e3o retorna 0, significa que ele n\u00e3o \u00e9 par, ou seja, ele \u00e9 \u00edmpar. Por exemplo:</li>\n</ul>\n<pre><code>    3 \u00e9 \u00edmpar pois, 3 % 2 retorna 1\n\n    6 n\u00e3o \u00e9 \u00edmpar pois, 6 % 2 retorna 0</code></pre>\n<h3 id=\"pseudoc\u00f3digo\">Pseudoc\u00f3digo</h3>\n<pre><code>Ler quantidade\nLer vetor\n\n// fun\u00e7\u00e3o que ordena o vetor\nOrdenar o vetor\n\n// par\nSe ( quantidade % 2 igual 0 ): \n    quantidade recebe quantidade / 2\n    Mostrar ( (vetor[quantidade - 1] + vetor[quantidade]) / 2 )\nSenao: // impar\n    quantidade recebe quantidade / 2\n    Mostrar ( vetor[quantidade] )</code></pre>\n<ul>\n<li>Lembrando que para ler um vetor \u00e9 necess\u00e1rio um la\u00e7o/estrutura de repeti\u00e7\u00e3o. Por exemplo:</li>\n</ul>\n<pre><code>Ler N\n\nPara (auxiliar menor N):\n    Ler vetor[auxiliar]</code></pre>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "case=\ninput=2\n2 4\noutput=\"3.0\n\"\ngrade reduction=100%\n\ncase=\ninput=3\n0 1 2\noutput=\"1.0\n\"\ngrade reduction=100%\n\ncase=\ninput=4\n0 9 3.2 1\noutput=\"6.1\n\"\ngrade reduction=100%\n\ncase=\ninput=5\n0 2 9 8 5.1\noutput=\"9.0\n\"\ngrade reduction=100%\n\ncase=05\ninput=4\n0.0 9.0 3.2 1.0\noutput=\"6.1\n\"\ngrade reduction=100%\n\ncase=06\ninput=5\n0.0 2.0 9.0 8.0 5.1\noutput=\"9.0\n\"\ngrade reduction=100%\n\ncase=07\ninput=6\n0.0 4.0 2.0 8.0 6.0 9.4\noutput=\"5.0\n\"\ngrade reduction=100%\n\ncase=08\ninput=8\n0.1 0.2 4.0 2.0 8.0 6.0 9.4 10.3\noutput=\"5.0\n\"\ngrade reduction=100%\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": []
}
