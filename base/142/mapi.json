{
    "title": "@142 L2 - Vetor de strings com variados tamanhos",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@142 L2 - Vetor de strings com variados tamanhos</title>\n  <style>\n    html {\n      line-height: 1.5;\n      font-family: Georgia, serif;\n      font-size: 20px;\n      color: #1a1a1a;\n      background-color: #fdfdfd;\n    }\n    body {\n      margin: 0 auto;\n      max-width: 36em;\n      padding-left: 50px;\n      padding-right: 50px;\n      padding-top: 50px;\n      padding-bottom: 50px;\n      hyphens: auto;\n      word-wrap: break-word;\n      text-rendering: optimizeLegibility;\n      font-kerning: normal;\n    }\n    @media (max-width: 600px) {\n      body {\n        font-size: 0.9em;\n        padding: 1em;\n      }\n    }\n    @media print {\n      body {\n        background-color: transparent;\n        color: black;\n        font-size: 12pt;\n      }\n      p, h2, h3 {\n        orphans: 3;\n        widows: 3;\n      }\n      h2, h3, h4 {\n        page-break-after: avoid;\n      }\n    }\n    p {\n      margin: 1em 0;\n    }\n    a {\n      color: #1a1a1a;\n    }\n    a:visited {\n      color: #1a1a1a;\n    }\n    img {\n      max-width: 100%;\n    }\n    h1, h2, h3, h4, h5, h6 {\n      margin-top: 1.4em;\n    }\n    h5, h6 {\n      font-size: 1em;\n      font-style: italic;\n    }\n    h6 {\n      font-weight: normal;\n    }\n    ol, ul {\n      padding-left: 1.7em;\n      margin-top: 1em;\n    }\n    li > ol, li > ul {\n      margin-top: 0;\n    }\n    blockquote {\n      margin: 1em 0 1em 1.7em;\n      padding-left: 1em;\n      border-left: 2px solid #e6e6e6;\n      color: #606060;\n    }\n    code {\n      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;\n      font-size: 85%;\n      margin: 0;\n    }\n    pre {\n      margin: 1em 0;\n      overflow: auto;\n    }\n    pre code {\n      padding: 0;\n      overflow: visible;\n    }\n    .sourceCode {\n     background-color: transparent;\n     overflow: visible;\n    }\n    hr {\n      background-color: #1a1a1a;\n      border: none;\n      height: 1px;\n      margin: 1em 0;\n    }\n    table {\n      margin: 1em 0;\n      border-collapse: collapse;\n      width: 100%;\n      overflow-x: auto;\n      display: block;\n      font-variant-numeric: lining-nums tabular-nums;\n    }\n    table caption {\n      margin-bottom: 0.75em;\n    }\n    tbody {\n      margin-top: 0.5em;\n      border-top: 1px solid #1a1a1a;\n      border-bottom: 1px solid #1a1a1a;\n    }\n    th {\n      border-top: 1px solid #1a1a1a;\n      padding: 0.25em 0.5em 0.25em 0.5em;\n    }\n    td {\n      padding: 0.125em 0.5em 0.25em 0.5em;\n    }\n    header {\n      margin-bottom: 4em;\n      text-align: center;\n    }\n    #TOC li {\n      list-style: none;\n    }\n    #TOC a:not(:hover) {\n      text-decoration: none;\n    }\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"section\"><span class=\"citation\" data-cites=\"142\">@142</span></h2>\n<h2 id=\"ponteiros-l2---vetor-de-strings-com-variados-tamanhos\">#ponteiros L2 - Vetor de strings com variados tamanhos</h2>\n<p><img src=\"https://raw.githubusercontent.com/qxcodefup/moodle/master/base/142/__capa.jpg\" /></p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Leia um conjunto de strings e aloque apenas a quantidade de mem\u00f3ria necess\u00e1ria para armazenar estas strings. Em seguida ordene e imprima as strings. Somente ser\u00e3o aceitas respostas com aloca\u00e7\u00e3o din\u00e2mica das strings (verifica\u00e7\u00e3o manual).</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Linha 1: n\u00famero de strings.</li>\n<li>Uma linha para cada strings. A linha come\u00e7a com um inteiro indicando quantos caracteres tem a string, seguido de um espa\u00e7o e a string.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<pre><code>- Strings em ordem crescente (ou seja, na ordem do dicion\u00e1rio).</code></pre>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n6\n12 Gilberto Gil\n14 Maria Bet\u00e2nia\n18 Osvaldo Montenegro\n14 Caetano Veloso\n6 Djavan\n12 Marisa Monte\n========\nCaetano Veloso\nDjavan\nGilberto Gil\nMaria Bet\u00e2nia\nMarisa Monte\nOsvaldo Montenegro\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n<h2 id=\"dicas\">Dicas</h2>\n<ul>\n<li><p>Declare um vetor com n ponteiros para char: char* v[n];</p></li>\n<li><p>Caso queira alocar este vetor dinamicamente, use um vetor contendo ponteiros para caracteres: char <strong>v = (char</strong>) malloc( n * sizeof(char*) );</p></li>\n<li><p>Para cada string, - leia o tamanho da string; - aloque mem\u00f3ria para armazenar esta string (lembre de alocar um caractere a mais para o terminador); - armazene o endere\u00e7o da mem\u00f3ria alocada em v[i] (elemento do vetor); - leia a string e grave em v[i].</p></li>\n<li><p>Para ordenar, - use a fun\u00e7\u00e3o strcmp para verificar se duas strings consecutivas est\u00e3o fora de ordem; - ao trocar duas strings, troque apenas o endere\u00e7o de mem\u00f3ria (n\u00e3o o conte\u00fado); - note que n\u00e3o \u00e9 v\u00e1lido trocar o conte\u00fado, pois as strings n\u00e3o t\u00eam o mesmo tamanho.</p>\n<pre><code>char* v[n];\n    +--+        +-+-+-+-+-+\n    | +--------&gt;|J|O|A|O|0|    v[0] = (char*) malloc(5*sizeof(char));\n    +--+        +-+-+-+-+-+\n    | +--------&gt;\n    +--+        +-+-+-+-+-+-+\n    | +--------&gt;|M|A|R|I|A|0|  v[2] = (char*)malloc(6*sizeof(char));\n    +--+        +-+-+-+-+-+-+\n      .\n      .\n      .\n    +--+\n    |  |\n    +--+</code></pre></li>\n</ul>\n<h1 id=\"section-1\"></h1>\n</body>\n</html>\n",
    "executionFiles": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "case=\ninput=6\n12 Gilberto Gil\n14 Maria Bet\u00e2nia\n18 Osvaldo Montenegro\n14 Caetano Veloso\n6 Djavan\n12 Marisa Monte\noutput=\"Caetano Veloso\nDjavan\nGilberto Gil\nMaria Bet\u00e2nia\nMarisa Monte\nOsvaldo Montenegro\n\"\ngrade reduction=100%\n",
            "encoding": 0
        }
    ],
    "requiredFile": null
}
